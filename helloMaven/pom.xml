<!--
实验步骤
1.首先建立Hello项目同时建立Maven约定的目录结构
		Hello
		 src
		 	main
		 		java
		 		resources
		 	test
		 		java
		 		resources
		 pom.xml

2.在项目Hello根目录建立pom.xml
3.在src/main/java/cn/itcast/maven目录下新建文件Hello.java
4.在/src/test/java/cn/itcast/maven目录下新建测试文件HelloTest.java
5.
	a)打开cmd命令行，进入Hello项目根目录执行 mvn compile命令，查看根目录变化
	b)cmd 中继续录入mvn clean命令，然后再次查看根目录变化
	c)cmd 中录入 mvn clean compile命令, 查看根目录变化
	d)cmd 中录入 mvn clean test命令，查看根目录变化
	e)cmd 中录入 mvn clean package命令,查看根目录变化
	f)cmd 中录入 mvn clean install 查看仓库会把项目安装到仓库里

总结
	mvn xxx 触发了不同的构建过程
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!--  pom版本号,不再改变 -->
  <modelVersion>4.0.0</modelVersion>
  <!-- 组织名加项目名 -->
  <groupId>com.happtim.maven</groupId>
  <!-- 版本号 snapshot是正在开发中的版本 -->
  <version>0.0.1-SNAPSHOT</version>
  <!-- 模块名 -->
  <artifactId>hello</artifactId>
  <name>hello</name>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>		
	</dependencies>

</project>
